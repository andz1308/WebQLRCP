@model WebCinema.Models.MovieDetailViewModel

@{
    ViewBag.Title = "Chi Tiết Phim";
    Layout = "~/Views/Shared/_Layout.cshtml";
    
    var movie = Model.Movie;
    var genres = Model.Genres;
    var cast = Model.Cast;
    var avgRating = Model.AverageRating;
    var ratingCount = Model.RatingCount;
    var showtimes = Model.Showtimes;
    var imagePath = Model.ImagePath;
    var trailer = Model.TrailerUrl;
}

<style>
    .movie-detail-container {
        max-width: 1400px;
        margin: 2rem auto;
        padding: 0 2rem;
    }

    .movie-header {
        background: linear-gradient(135deg, #ffffff 0%, #f9f9f9 100%);
        border-radius: 12px;
        padding: 2rem;
        margin-bottom: 2rem;
        box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
        display: grid;
        grid-template-columns: 300px 1fr;
        gap: 2rem;
    }

    .movie-poster-large {
        width: 100%;
        height: 450px;
        background: linear-gradient(135deg, #ff6b35 0%, #ff8555 100%);
        border-radius: 8px;
        overflow: hidden;
        box-shadow: 0 8px 30px rgba(255, 107, 53, 0.3);
    }

    .movie-poster-large img {
        width: 100%;
        height: 100%;
        object-fit: cover;
    }

    .movie-main-info h1 {
        font-size: 2.5rem;
        color: #333;
        margin-bottom: 1rem;
    }

    .movie-meta {
        display: flex;
        gap: 2rem;
        margin-bottom: 1.5rem;
        flex-wrap: wrap;
    }

    .meta-item {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        color: #666;
    }

    .meta-label {
        font-weight: 600;
        color: #ff6b35;
    }

    .movie-rating-detail {
        display: flex;
        align-items: center;
        gap: 1rem;
        margin-bottom: 1.5rem;
    }

    .rating-stars-large {
        font-size: 1.5rem;
        color: #ffc107;
    }

    .rating-number {
        font-size: 2rem;
        font-weight: bold;
        color: #ff6b35;
    }

    .rating-total {
        color: #999;
    }

    .movie-description {
        line-height: 1.8;
        color: #555;
        margin-bottom: 1.5rem;
    }

    .movie-actions {
        display: flex;
        gap: 1rem;
    }

    .btn-book-ticket {
        padding: 1rem 3rem;
        background: #ff6b35;
        color: white;
        border: none;
        border-radius: 8px;
        font-size: 1.1rem;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.3s ease;
    }

    .btn-book-ticket:hover {
        background: #ff8555;
        transform: translateY(-2px);
        box-shadow: 0 8px 20px rgba(255, 107, 53, 0.3);
    }

    .btn-trailer {
        padding: 1rem 2rem;
        background: transparent;
        color: #ff6b35;
        border: 2px solid #ff6b35;
        border-radius: 8px;
        font-size: 1.1rem;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.3s ease;
        display: flex;
        align-items: center;
        gap: 0.5rem;
    }

    .btn-trailer:hover {
        background: #ff6b35;
        color: white;
        transform: translateY(-2px);
        box-shadow: 0 8px 20px rgba(255, 107, 53, 0.3);
    }

    .section-detail {
        background: white;
        border-radius: 12px;
        padding: 2rem;
        margin-bottom: 2rem;
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
    }

    .section-detail h2 {
        font-size: 1.8rem;
        color: #333;
        margin-bottom: 1.5rem;
        padding-bottom: 1rem;
        border-bottom: 3px solid #ff6b35;
    }

    /* Enhanced Booking Section */
    .booking-section {
        background: white;
        border-radius: 12px;
        padding: 2rem;
        margin-bottom: 2rem;
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
        display: none;
    }

    .booking-section.active {
        display: block;
        animation: slideDown 0.4s ease;
    }

    @@keyframes slideDown {
        from {
            opacity: 0;
            transform: translateY(-20px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    .booking-tabs {
        display: flex;
        gap: 0;
        margin-bottom: 2rem;
        border-bottom: 2px solid #e0e0e0;
    }

    .booking-tab {
        flex: 1;
        padding: 1rem;
        background: #f9f9f9;
        border: none;
        cursor: pointer;
        font-weight: 600;
        color: #666;
        transition: all 0.3s ease;
        border-bottom: 3px solid transparent;
    }

    .booking-tab.active {
        background: white;
        color: #ff6b35;
        border-bottom-color: #ff6b35;
    }

    .booking-content {
        display: none;
    }

    .booking-content.active {
        display: block;
    }

    .date-selector {
        display: flex;
        gap: 0.5rem;
        overflow-x: auto;
        padding: 1rem 0;
        margin-bottom: 2rem;
    }

    .date-item {
        min-width: 80px;
        padding: 1rem;
        background: #f9f9f9;
        border: 2px solid #e0e0e0;
        border-radius: 8px;
        text-align: center;
        cursor: pointer;
        transition: all 0.3s ease;
    }

    .date-item:hover {
        border-color: #ff6b35;
        background: #fff;
    }

    .date-item.active {
        background: #ff6b35;
        border-color: #ff6b35;
        color: white;
    }

    .date-number {
        font-size: 1.5rem;
        font-weight: bold;
        display: block;
    }

    .date-day {
        font-size: 0.9rem;
        opacity: 0.8;
    }

    .region-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(120px, 1fr));
        gap: 1rem;
        margin-bottom: 2rem;
    }

    .region-btn {
        padding: 1rem;
        background: #f9f9f9;
        border: 2px solid #e0e0e0;
        border-radius: 8px;
        text-align: center;
        cursor: pointer;
        font-weight: 600;
        transition: all 0.3s ease;
    }

    .region-btn:hover {
        border-color: #ff6b35;
        background: #fff;
    }

    .region-btn.active {
        background: #ff6b35;
        border-color: #ff6b35;
        color: white;
    }

    .cinema-list {
        display: flex;
        flex-direction: column;
        gap: 1.5rem;
    }

    .cinema-item {
        border: 2px solid #e0e0e0;
        border-radius: 8px;
        padding: 1.5rem;
        transition: all 0.3s ease;
    }

    .cinema-item:hover {
        border-color: #ff6b35;
        box-shadow: 0 4px 15px rgba(255, 107, 53, 0.1);
    }

    .cinema-name-header {
        font-size: 1.2rem;
        font-weight: 600;
        color: #333;
        margin-bottom: 0.5rem;
    }

    .cinema-address {
        color: #666;
        font-size: 0.9rem;
        margin-bottom: 1rem;
    }

    .cinema-type {
        display: inline-block;
        padding: 0.3rem 0.8rem;
        background: #f9f9f9;
        border-radius: 4px;
        font-size: 0.85rem;
        color: #ff6b35;
        margin-bottom: 1rem;
    }

    .time-slots {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(100px, 1fr));
        gap: 1rem;
    }

    .time-slot {
        padding: 0.8rem;
        background: #f9f9f9;
        border: 2px solid #e0e0e0;
        border-radius: 8px;
        text-align: center;
        cursor: pointer;
        transition: all 0.3s ease;
        font-weight: 600;
    }

    .time-slot:hover {
        background: #ff6b35;
        border-color: #ff6b35;
        color: white;
        transform: translateY(-2px);
    }

    .cast-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));
        gap: 1.5rem;
    }

    .cast-item {
        text-align: center;
    }

    .cast-photo {
        width: 120px;
        height: 120px;
        border-radius: 50%;
        background: linear-gradient(135deg, #ff6b35 0%, #ff8555 100%);
        margin: 0 auto 1rem;
        overflow: hidden;
        box-shadow: 0 4px 15px rgba(255, 107, 53, 0.2);
    }

    .cast-photo img {
        width: 100%;
        height: 100%;
        object-fit: cover;
    }

    .cast-name {
        font-weight: 600;
        color: #333;
        margin-bottom: 0.3rem;
    }

    .cast-role {
        font-size: 0.9rem;
        color: #ff6b35;
    }

    .info-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
        gap: 1.5rem;
    }

    .info-item {
        padding: 1rem;
        background: #f9f9f9;
        border-radius: 8px;
        border-left: 4px solid #ff6b35;
    }

    .info-label {
        font-weight: 600;
        color: #ff6b35;
        margin-bottom: 0.5rem;
    }

    .info-value {
        color: #333;
    }

    /* Trailer Modal Styles */
    .trailer-modal {
        display: none;
        position: fixed;
        z-index: 9999;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.95);
        animation: fadeIn 0.3s ease;
    }

    .trailer-modal.active {
        display: flex;
        justify-content: center;
        align-items: center;
    }

    @@keyframes fadeIn {
        from { opacity: 0; }
        to { opacity: 1; }
    }

    .trailer-content {
        position: relative;
        width: 90%;
        max-width: 1200px;
        background: #000;
        border-radius: 12px;
        overflow: hidden;
        box-shadow: 0 10px 50px rgba(255, 107, 53, 0.5);
        animation: slideUp 0.4s ease;
    }

    @@keyframes slideUp {
        from {
            transform: translateY(50px);
            opacity: 0;
        }
        to {
            transform: translateY(0);
            opacity: 1;
        }
    }

    .trailer-close {
        position: absolute;
        top: 15px;
        right: 20px;
        color: white;
        font-size: 35px;
        font-weight: bold;
        cursor: pointer;
        z-index: 10000;
        background: rgba(255, 107, 53, 0.8);
        width: 45px;
        height: 45px;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        transition: all 0.3s ease;
    }

    .trailer-close:hover {
        background: #ff6b35;
        transform: rotate(90deg);
    }

    .trailer-video-wrapper {
        position: relative;
        padding-bottom: 56.25%; /* 16:9 aspect ratio */
        height: 0;
        overflow: hidden;
    }

    .trailer-video-wrapper iframe,
    .trailer-video-wrapper video {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
    }

    @@media (max-width: 768px) {
        .movie-header {
            grid-template-columns: 1fr;
        }

        .movie-poster-large {
            height: 400px;
        }

        .booking-tabs {
            flex-direction: column;
        }
    }
</style>

<div class="movie-detail-container">
    <!-- Movie Header -->
    <div class="movie-header">
        <div class="movie-poster-large">
            @if (!string.IsNullOrEmpty(imagePath))
            {
                var imgSrc = imagePath.StartsWith("~") ? Url.Content(imagePath) : imagePath;
                <img src="@imgSrc" alt="@movie.ten_phim" />
            }
        </div>
        <div class="movie-main-info">
            <h1>@movie.ten_phim</h1>

            <div class="movie-meta">
                <div class="meta-item">
                    <span class="meta-label">Thể loại:</span>
                    <span>@(genres != null && genres.Any() ? string.Join(", ", genres) : "Chưa phân loại")</span>
                </div>
                <div class="meta-item">
                    <span class="meta-label">Thời lượng:</span>
                    <span>@(movie.thoi_luong.HasValue ? movie.thoi_luong.Value + " phút" : "N/A")</span>
                </div>
                <div class="meta-item">
                    <span class="meta-label">Khởi chiếu:</span>
                    <span>@(movie.ngay_khoi_chieu.HasValue ? movie.ngay_khoi_chieu.Value.ToString("dd/MM/yyyy") : "N/A")</span>
                </div>
            </div>

            <div class="movie-rating-detail">
                <div class="rating-stars-large">
                    @for (int i = 0; i < (int)Math.Round(avgRating); i++)
                    {
                        <text>★</text>
                    }
                    @for (int i = 0; i < 5 - (int)Math.Round(avgRating); i++)
                    {
                        <text>☆</text>
                    }
                </div>
                <span class="rating-number">@avgRating.ToString("0.0")</span>
                <span class="rating-total">/ 5 (@ratingCount đánh giá)</span>
            </div>

            <div class="movie-description">
                <p>@(movie.mo_ta ?? "Chưa có mô tả cho phim này.")</p>
            </div>

            <div class="movie-actions">
                <button class="btn-book-ticket" onclick="toggleBookingSection()">
                    🎟️ Đặt Vé Ngay
                </button>
                @if (!string.IsNullOrEmpty(trailer))
                {
                    <button class="btn-trailer" onclick="showTrailer()">
                        🎬 Xem Trailer
                    </button>
                }
            </div>
        </div>
    </div>

    <!-- Enhanced Booking Section -->
    <div class="booking-section" id="bookingSection">
        <h2 style="font-size: 1.8rem; color: #333; margin-bottom: 1.5rem; padding-bottom: 1rem; border-bottom: 3px solid #ff6b35;">
            📍 Chọn Suất Chiếu
        </h2>

        <!-- Date Selector -->
        <div class="date-selector" id="dateSelector">
            @if (showtimes != null && showtimes.Any())
            {
                var uniqueDates = showtimes.Select(s => s.ngay_chieu.Date).Distinct().OrderBy(d => d).Take(7).ToList();
                for (int i = 0; i < uniqueDates.Count; i++)
                {
                    var date = uniqueDates[i];
                    var isActive = i == 0 ? "active" : "";
                    <div class="date-item @isActive" onclick="selectDate('@date.ToString("yyyy-MM-dd")')">
                        <span class="date-number">@date.Day</span>
                        <span class="date-day">Th@((int)date.DayOfWeek == 0 ? 8 : (int)date.DayOfWeek + 1)</span>
                    </div>
                }
            }
        </div>

        <!-- Region Tabs -->
        <div class="booking-tabs">
            <button class="booking-tab active" onclick="selectRegion('hochiminh')">Hồ Chí Minh</button>
            <button class="booking-tab" onclick="selectRegion('hanoi')">Hà Nội</button>
            <button class="booking-tab" onclick="selectRegion('danang')">Đà Nẵng</button>
            <button class="booking-tab" onclick="selectRegion('other')">Tỉnh Thành Khác</button>
        </div>

        <!-- Cinema List -->
        <div class="booking-content active" id="content-hochiminh">
            <div class="cinema-list">
                @if (showtimes != null && showtimes.Any())
                {
                    // Group by cinema (Phong_Chieu -> Rap)
                    var cinemaGroups = showtimes
                        .Where(s => s.Phong_Chieu != null && s.Phong_Chieu.Rap != null)
                        .GroupBy(s => s.Phong_Chieu.Rap.rap_id);

                    foreach (var cinemaGroup in cinemaGroups.Take(3))
                    {
                        var cinema = cinemaGroup.First().Phong_Chieu.Rap;
                        var cinemaTimes = cinemaGroup.OrderBy(s => s.Ca_Chieu.gio_bat_dau).ToList();

                        <div class="cinema-item">
                            <div class="cinema-name-header">@cinema.ten_rap</div>
                            <div class="cinema-address">📍 @(cinema.dia_chi ?? "Địa chỉ đang cập nhật")</div>
                            <div class="cinema-type">Rạp 2D</div>
                            
                            <div class="time-slots">
                                @foreach (var showtime in cinemaTimes.Take(7))
                                {
                                    <div class="time-slot" onclick="bookShowtime(@showtime.suat_chieu_id)">
                                        @showtime.Ca_Chieu.gio_bat_dau.ToString(@"hh\:mm")
                                    </div>
                                }
                            </div>
                        </div>
                    }
                }
                else
                {
                    <p style="text-align: center; color: #999; padding: 2rem;">
                        Hiện chưa có suất chiếu tại khu vực này.
                    </p>
                }
            </div>
        </div>

        <div class="booking-content" id="content-hanoi">
            <p style="text-align: center; color: #999; padding: 2rem;">
                Suất chiếu tại Hà Nội đang được cập nhật.
            </p>
        </div>

        <div class="booking-content" id="content-danang">
            <p style="text-align: center; color: #999; padding: 2rem;">
                Suất chiếu tại Đà Nẵng đang được cập nhật.
            </p>
        </div>

        <div class="booking-content" id="content-other">
            <p style="text-align: center; color: #999; padding: 2rem;">
                Suất chiếu tại các tỉnh thành khác đang được cập nhật.
            </p>
        </div>
    </div>

    <!-- Additional Info -->
    <div class="section-detail">
        <h2>Thông Tin Phim</h2>
        <div class="info-grid">
            @if (movie.Dao_Dien != null)
            {
                <div class="info-item">
                    <div class="info-label">Đạo diễn</div>
                    <div class="info-value">@movie.Dao_Dien.ho_ten</div>
                </div>
            }
            @if (movie.Nha_San_Xuat != null)
            {
                <div class="info-item">
                    <div class="info-label">Nhà sản xuất</div>
                    <div class="info-value">@movie.Nha_San_Xuat.ten_nha_san_xuat</div>
                </div>
            }
            @if (movie.Nha_San_Xuat != null && movie.Nha_San_Xuat.quoc_gia != null)
            {
                <div class="info-item">
                    <div class="info-label">Quốc gia</div>
                    <div class="info-value">@movie.Nha_San_Xuat.quoc_gia</div>
                </div>
            }
        </div>
    </div>

    <!-- Cast -->
    @if (cast != null && cast.Any())
    {
        <div class="section-detail">
            <h2>Diễn Viên</h2>
            <div class="cast-grid">
                @foreach (var actor in cast.Take(8))
                {
                    <div class="cast-item">
                        <div class="cast-photo">
                            @if (actor.Dien_Vien != null && !string.IsNullOrEmpty(actor.Dien_Vien.hinh_anh))
                            {
                                var actorImg = actor.Dien_Vien.hinh_anh.StartsWith("~") ? Url.Content(actor.Dien_Vien.hinh_anh) : actor.Dien_Vien.hinh_anh;
                                <img src="@actorImg" alt="@actor.Dien_Vien.ho_ten" />
                            }
                        </div>
                        <div class="cast-name">@(actor.Dien_Vien != null ? actor.Dien_Vien.ho_ten : "N/A")</div>
                        <div class="cast-role">@(actor.ten_vai_dien ?? "N/A")</div>
                    </div>
                }
            </div>
        </div>
    }
</div>

<!-- Trailer Modal -->
@if (!string.IsNullOrEmpty(trailer))
{
    <div class="trailer-modal" id="trailerModal">
        <div class="trailer-content">
            <span class="trailer-close" onclick="closeTrailer()">&times;</span>
            <div class="trailer-video-wrapper" id="trailerWrapper">
                <!-- Video will be loaded here dynamically -->
            </div>
        </div>
    </div>
}

<script>
    function toggleBookingSection() {
        const bookingSection = document.getElementById('bookingSection');
        bookingSection.classList.toggle('active');
        if (bookingSection.classList.contains('active')) {
            bookingSection.scrollIntoView({ behavior: 'smooth', block: 'start' });
        }
    }

    function selectRegion(region) {
        // Update tabs
        const tabs = document.querySelectorAll('.booking-tab');
        tabs.forEach(tab => tab.classList.remove('active'));
        event.target.classList.add('active');

        // Update content
        const contents = document.querySelectorAll('.booking-content');
        contents.forEach(content => content.classList.remove('active'));
        document.getElementById('content-' + region).classList.add('active');
    }

    function selectDate(date) {
        const dateItems = document.querySelectorAll('.date-item');
        dateItems.forEach(item => item.classList.remove('active'));
        event.target.closest('.date-item').classList.add('active');
        
        // Here you can filter showtimes by date
        console.log('Selected date:', date);
    }

    function bookShowtime(showtimeId) {
        // Check if user is logged in
        alert('Chức năng đặt vé đang được phát triển!\nSuất chiếu ID: ' + showtimeId);
        // Later: Redirect to booking page with showtime ID
        // window.location.href = '/Booking/SelectSeats?showtimeId=' + showtimeId;
    }

    function showTrailer() {
        const modal = document.getElementById('trailerModal');
        const wrapper = document.getElementById('trailerWrapper');
        const trailerUrl = '@Html.Raw(trailer ?? "")';
        
        if (!trailerUrl) {
            alert('Trailer chưa có sẵn!');
            return;
        }
        
        // Detect if it's a YouTube URL
        if (trailerUrl.includes('youtube.com') || trailerUrl.includes('youtu.be')) {
            let videoId = '';
            if (trailerUrl.includes('youtube.com/watch')) {
                videoId = trailerUrl.split('v=')[1];
                const ampersandPosition = videoId.indexOf('&');
                if (ampersandPosition !== -1) {
                    videoId = videoId.substring(0, ampersandPosition);
                }
            } else if (trailerUrl.includes('youtu.be/')) {
                videoId = trailerUrl.split('youtu.be/')[1];
            }
            
            wrapper.innerHTML = `<iframe src="https://www.youtube.com/embed/${videoId}?autoplay=1" 
                                frameborder="0" 
                                allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" 
                                allowfullscreen></iframe>`;
        } else {
            // For direct video files
            wrapper.innerHTML = `<video controls autoplay>
                                    <source src="${trailerUrl}" type="video/mp4">
                                    Your browser does not support the video tag.
                                </video>`;
        }
        
        modal.classList.add('active');
        document.body.style.overflow = 'hidden';
    }

    function closeTrailer() {
        const modal = document.getElementById('trailerModal');
        const wrapper = document.getElementById('trailerWrapper');
        
        modal.classList.remove('active');
        wrapper.innerHTML = '';
        document.body.style.overflow = 'auto';
    }

    // Close modal when clicking outside
    window.onclick = function(event) {
        const modal = document.getElementById('trailerModal');
        if (event.target === modal) {
            closeTrailer();
        }
    }

    // Close modal with ESC key
    document.addEventListener('keydown', function(event) {
        if (event.key === 'Escape') {
            closeTrailer();
        }
    });
</script>


